from colorama import *
import os
import sys

init(autoreset=True)

def print_do(message, color_continue=True):
    print(f"{Fore.GREEN}[+] {message}")
    if not color_continue:
        print(f"{Fore.GREEN}[+]{Fore.RESET} {message}")

def print_warning(message, color_continue=True):
    print(f"{Fore.RED}[!] {message}")
    if not color_continue:
        print(f"{Fore.RED}[!]{Fore.RESET} {message}")

"""
print_do() => enter message but write green and [+]
print_warning() => enter message but write red and [!]
"""

def options():
    print("""
    NAME                     Current Setting                Required    Description
    ------------------       ------------------------     ----------   ---------------------
    LHOST                    0.0.0.0                        yes          Local host
    LPORT                    4444                           yes          Local port
    PAYLOAD                  intframework/payloads/reverse_shell.py  yes  Use payload
    """)

def __opts__():
    if len(sys.argv) < 4:
        print_warning("Insufficient arguments provided.")
        options()
        sys.exit(1)

    lhost = sys.argv[1]
    lport = sys.argv[2] if len(sys.argv) > 2 else input(f"sylph ({Fore.RED}intframework/modules/exploits/multi/handler)[Enter Lport] > ")
    payload = sys.argv[3] if len(sys.argv) > 3 else input(f"Enter Payload [e.g intframework/payloads/reverse_shell.py] => ")

    try:
        os.system(f"python3 {payload} {lhost} {lport}")
    except Exception as e:
        print_warning(f"Error: {str(e)}")

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "--opts":
        options()
        sys.exit(0)
    else:
        __opts__()
